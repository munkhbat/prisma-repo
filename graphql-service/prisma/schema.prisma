// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String             @id @unique
  firstName       String
  lastName        String
  password        String
  email           String
  createdAt       DateTime           @default(now())
  updatedAt       DateTime           @updatedAt
  memberships     UserOrganization[]
  tokens          Token[]
}

model Organization {
  id        String               @id @unique
  name      String
  register  String
  email     String
  createdAt DateTime             @default(now())
  updatedAt DateTime             @updatedAt
  members   UserOrganization[]
}

model UserOrganization {
  id             String       @id @default(uuid())
  userId         String
  organizationId String
  user           User         @relation(fields: [userId], references: [id])
  organization   Organization @relation(fields: [organizationId], references: [id])
  role           String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  @@unique([userId, organizationId])
}

model Token {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  isActive  Boolean  @default(true)
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("Token")
}
